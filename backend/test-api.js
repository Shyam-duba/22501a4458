const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3000/api/urls';

// Test 1: Create a shortened URL
async function createShortUrl() {
  try {
    console.log('üöÄ Creating shortened URL...');
    
    const response = await fetch(`${BASE_URL}/shorten`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        originalUrl: 'https://www.google.com',
        customName: 'google-test',
        validityDays: 30
      })
    });

    const data = await response.json();
    console.log('‚úÖ Created shortened URL:');
    console.log(JSON.stringify(data, null, 2));
    
    return data.data.shortCode;
  } catch (error) {
    console.error('‚ùå Error creating shortened URL:', error.message);
  }
}

// Test 2: Get URL statistics
async function getUrlStats(shortCode) {
  try {
    console.log(`\nüìä Getting statistics for: ${shortCode}`);
    
    const response = await fetch(`${BASE_URL}/stats/${shortCode}`);
    const data = await response.json();
    
    console.log('‚úÖ URL Statistics:');
    console.log(JSON.stringify(data, null, 2));
  } catch (error) {
    console.error('‚ùå Error getting statistics:', error.message);
  }
}

// Test 3: Access the shortened URL (simulate a click)
async function accessShortUrl(shortCode) {
  try {
    console.log(`\nüîó Accessing shortened URL: ${shortCode}`);
    
    const response = await fetch(`${BASE_URL}/${shortCode}`, {
      redirect: 'manual' // Don't follow redirects
    });
    
    console.log(`‚úÖ Redirect status: ${response.status}`);
    console.log(`üìç Redirect location: ${response.headers.get('location')}`);
  } catch (error) {
    console.error('‚ùå Error accessing shortened URL:', error.message);
  }
}

// Test 4: Create URL without custom name (auto-generated)
async function createAutoGeneratedUrl() {
  try {
    console.log('\nüé≤ Creating auto-generated shortened URL...');
    
    const response = await fetch(`${BASE_URL}/shorten`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        originalUrl: 'https://www.github.com',
        validityDays: 7
      })
    });

    const data = await response.json();
    console.log('‚úÖ Created auto-generated URL:');
    console.log(JSON.stringify(data, null, 2));
    
    return data.data.shortCode;
  } catch (error) {
    console.error('‚ùå Error creating auto-generated URL:', error.message);
  }
}

// Run all tests
async function runTests() {
  console.log('üß™ Starting URL Shortener API Tests\n');
  
  // Test 1: Create custom named URL
  const customShortCode = await createShortUrl();
  
  // Test 2: Get stats for custom URL
  if (customShortCode) {
    await getUrlStats(customShortCode);
    
    // Test 3: Access the URL
    await accessShortUrl(customShortCode);
    
    // Test 4: Get stats again to see updated clicks
    console.log('\nüìà Getting updated statistics after click...');
    await getUrlStats(customShortCode);
  }
  
  // Test 5: Create auto-generated URL
  const autoShortCode = await createAutoGeneratedUrl();
  
  // Test 6: Get stats for auto-generated URL
  if (autoShortCode) {
    await getUrlStats(autoShortCode);
  }
  
  console.log('\n‚ú® All tests completed!');
}

// Run the tests
runTests().catch(console.error); 